# Generated by Django 2.1.3 on 2020-04-28 12:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationCategorys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Категория области применения',
                'verbose_name_plural': 'Категории областей применения',
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('category', models.ForeignKey(db_column='category', on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.ApplicationCategorys')),
            ],
            options={
                'verbose_name': 'Область применения',
                'verbose_name_plural': 'Области применения',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Copolymers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Сополимер',
                'verbose_name_plural': 'Сополимеры',
            },
        ),
        migrations.CreateModel(
            name='Modifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Модификация',
                'verbose_name_plural': 'Модификации',
            },
        ),
        migrations.CreateModel(
            name='ObtainingMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Метод получения',
                'verbose_name_plural': 'Методы получения',
            },
        ),
        migrations.CreateModel(
            name='Plants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('shortname', models.CharField(blank=True, max_length=45, null=True)),
                ('address_street', models.CharField(blank=True, max_length=45, null=True)),
                ('address_house', models.CharField(blank=True, max_length=45, null=True)),
                ('address_city', models.CharField(blank=True, max_length=45, null=True)),
                ('address_state', models.CharField(blank=True, max_length=45, null=True)),
                ('address_post', models.CharField(blank=True, max_length=45, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=45, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=45, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=45, null=True)),
                ('pnone', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Polymers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortcode', models.CharField(max_length=15, unique=True, verbose_name='Марка')),
                ('ptr', models.FloatField(verbose_name='ПТР')),
                ('ptr_load', models.FloatField(blank=True, null=True, verbose_name='ПТР нагрузка')),
                ('ptr_temperature', models.IntegerField(blank=True, null=True, verbose_name='ПТР температура')),
                ('density', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, verbose_name='Плотность')),
                ('relation', models.CharField(blank=True, max_length=8, null=True, verbose_name='Отношение')),
                ('copolymer_content', models.IntegerField(blank=True, null=True, verbose_name='Содержание сополимера')),
                ('t_vika', models.IntegerField(verbose_name='Температура Вика')),
                ('viscosity_Mooney', models.IntegerField(blank=True, null=True, verbose_name='Вязкость Муни')),
                ('content_diene', models.IntegerField(blank=True, null=True, verbose_name='Содержание диена')),
                ('content_ethylene', models.IntegerField(blank=True, null=True, verbose_name='Содержание этилена')),
                ('applications', models.ManyToManyField(to='sprav.Applications', verbose_name='область применения')),
                ('color', models.ForeignKey(db_column='color', on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.Colors', verbose_name='цвет')),
                ('copolymer', models.ForeignKey(blank=True, db_column='copolymer', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.Copolymers', verbose_name='сополимер')),
                ('modification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.Modifications', verbose_name='модификация')),
                ('obtaining_methods', models.ManyToManyField(to='sprav.ObtainingMethods', verbose_name='метод получения')),
                ('plants', models.ManyToManyField(to='sprav.Plants', verbose_name='произодитель')),
            ],
            options={
                'verbose_name': 'Полимер',
                'verbose_name_plural': 'Полимеры',
            },
        ),
        migrations.CreateModel(
            name='ProcessingMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Метод переработки',
                'verbose_name_plural': 'Методы переработки',
            },
        ),
        migrations.CreateModel(
            name='Subtypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='подтип')),
            ],
            options={
                'verbose_name': 'Подтип',
                'verbose_name_plural': 'Подтипы',
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='тип')),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы',
            },
        ),
        migrations.AddField(
            model_name='subtypes',
            name='type',
            field=models.ForeignKey(db_column='type', on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.Types', verbose_name='тип'),
        ),
        migrations.AddField(
            model_name='polymers',
            name='processing_methods',
            field=models.ManyToManyField(to='sprav.ProcessingMethods', verbose_name='метод переработки'),
        ),
        migrations.AddField(
            model_name='polymers',
            name='subtype',
            field=models.ForeignKey(db_column='subtype', on_delete=django.db.models.deletion.DO_NOTHING, to='sprav.Subtypes', verbose_name='подтип'),
        ),
    ]
